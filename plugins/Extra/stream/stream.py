from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ForceReply, CallbackQuery
from info import STREAM_MODE, URL, LOG_CHANNEL
from urllib.parse import quote_plus
from botnet.util.file_properties import get_name, get_hash, get_media_file_size
from botnet.util.human_readable import humanbytes
import humanize
import random

@Client.on_message(filters.private & filters.command("stream"))
async def stream_start(client, message):
    if STREAM_MODE == False:
        return 
    msg = await client.ask(message.chat.id, "…¥·¥è·¥° Íú±·¥á…¥·¥Ö ·¥ç·¥á  è·¥è·¥ú Ä Íú∞…™ ü·¥á/·¥†…™·¥Ö·¥á·¥è ·¥õ·¥è …¢·¥á·¥õ Íú±·¥õ Ä·¥á·¥Ä·¥ç ·¥Ä…¥·¥Ö ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  ü…™…¥·¥ã")
    if not msg.media:
        return await message.reply("·¥ò ü·¥á·¥ÄÍú±·¥á Íú±·¥á…¥·¥Ö ·¥ç·¥á Íú±·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö ·¥ç·¥á·¥Ö…™·¥Ä.")
    if msg.media in [enums.MessageMediaType.VIDEO, enums.MessageMediaType.DOCUMENT]:
        file = getattr(msg, msg.media.value)
        filename = file.file_name
        filesize = humanize.naturalsize(file.file_size) 
        fileid = file.file_id
        user_id = message.from_user.id
        username =  message.from_user.mention 

        log_msg = await client.send_cached_media(
            chat_id=LOG_CHANNEL,
            file_id=fileid,
        )
        fileName = {quote_plus(get_name(log_msg))}
        stream = f"{URL}watch/{str(log_msg.id)}/{quote_plus(get_name(log_msg))}?hash={get_hash(log_msg)}"
        download = f"{URL}{str(log_msg.id)}/{quote_plus(get_name(log_msg))}?hash={get_hash(log_msg)}"
 
        await log_msg.reply_text(
            text=f"  ü…™…¥·¥ã …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö Íú∞·¥è Ä …™·¥Ö #{user_id} \n ·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á : {username} \n\nFILE NAME : {fileName}",
            quote=True,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(" ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ", url=download),  # we download Link
                                                InlineKeyboardButton(' ·¥°·¥Ä·¥õ·¥Ñ ú ·¥è…¥ ü…™…¥·¥á', url=stream)]])  # web stream Link
        )
        rm=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton("s·¥õ Ä·¥á·¥Ä·¥ç üñ•", url=stream),
                    InlineKeyboardButton('·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö üì•', url=download)
                ]
            ] 
        )
        msg_text = """<i><u> LINK GENERATED !</u></i>\n\n<b>üìÇ F…™ ü·¥á …¥·¥Ä·¥ç·¥á :</b> <i>{}</i>\n\n<b>üìù F…™ ü·¥á Íú±…™·¥¢·¥á :</b> <i>{}</i>\n\n<b> D·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö :</b> <i>{}</i>\n\n<b> ·¥°·¥Ä·¥õ·¥Ñ ú  :</b> <i>{}</i>\n\n<b> N·¥è·¥õ·¥á :  ü…™…¥·¥ã ·¥°·¥è…¥'·¥õ ·¥áx·¥ò…™ Ä·¥á ·¥õ…™ ü ü …™ ·¥Ö·¥á ü·¥á·¥õ·¥á</b>"""

        await message.reply_text(text=msg_text.format(get_name(log_msg), humanbytes(get_media_file_size(msg)), download, stream), quote=True, disable_web_page_preview=True, reply_markup=rm)
